using System;
using System.Text.Json.Serialization;
using TrueLayer.Common;
using TrueLayer.Serialization;

namespace TrueLayer.Payouts.Model;

/// <summary>
/// Represents a payout user for user-determined beneficiaries
/// </summary>
public record PayoutUserRequest
{
    /// <summary>
    /// Creates a payout user
    /// </summary>
    /// <param name="id">A unique identifier for the user (optional, generated by TrueLayer if not provided)</param>
    /// <param name="name">The full first and last name of the end user (required if client is not regulated or verify_name is true)</param>
    /// <param name="email">The email address of the end user (required if not using own PISP licence, unless phone is provided)</param>
    /// <param name="phone">The phone number of the end user with country code (required if not using own PISP licence, unless email is provided)</param>
    /// <param name="dateOfBirth">The date of birth of the end user in YYYY-MM-DD format</param>
    /// <param name="address">The physical address of the end user</param>
    public PayoutUserRequest(
        string? id = null,
        string? name = null,
        string? email = null,
        string? phone = null,
        DateTime? dateOfBirth = null,
        Address? address = null)
    {
        Id = id.NotEmptyOrWhiteSpace(nameof(id));
        Name = name.NotEmptyOrWhiteSpace(nameof(name));
        Email = email.NotEmptyOrWhiteSpace(nameof(email));
        Phone = phone.NotEmptyOrWhiteSpace(nameof(phone));
        DateOfBirth = dateOfBirth;
        Address = address;
    }

    /// <summary>
    /// Gets a unique identifier for the user. If not provided, TrueLayer generates a value in the response.
    /// </summary>
    public string? Id { get; }

    /// <summary>
    /// Gets the full first and last name of the end user (not initials).
    /// Required if client is not regulated or verification.verify_name is set to true.
    /// </summary>
    public string? Name { get; }

    /// <summary>
    /// Gets the email address of the end user according to RFC 2822.
    /// If using own PISP licence this is optional, otherwise one of email/phone is required.
    /// </summary>
    public string? Email { get; }

    /// <summary>
    /// Gets the phone number of the end user in formats recommended by ITU.
    /// The country calling code must be included and prefixed with a +.
    /// If using own PISP licence this is optional, otherwise one of email/phone is required.
    /// </summary>
    public string? Phone { get; }

    /// <summary>
    /// Gets the date of birth of the end user, in YYYY-MM-DD format
    /// </summary>
    [JsonConverter(typeof(DateTimeDateOnlyJsonConverter))]
    public DateTime? DateOfBirth { get; }

    /// <summary>
    /// Gets the physical address of the end user
    /// </summary>
    public Address? Address { get; }
}

/// <summary>
/// Represents a payout user response
/// </summary>
public record PayoutUserResponse(string Id);